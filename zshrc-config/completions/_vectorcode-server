#compdef vectorcode-server

# AUTOMATICALLY GENERATED by `shtab`


_shtab_vectorcode_server_commands() {
  local _commands=(
    
  )
  _describe 'vectorcode-server commands' _commands
}

_shtab_vectorcode_server_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
  "--version[]"
  "--project_root[Default project root for VectorCode queries.]:project_root:"
  "(- : *)"{-s,--print-completion}"[Print completion script.]:print_completion:(bash zsh tcsh)"
)


_shtab_vectorcode_server() {
  local context state line curcontext="$curcontext" one_or_more='(-)*' remainder='(*)'

  if ((${_shtab_vectorcode_server_options[(I)${(q)one_or_more}*]} + ${_shtab_vectorcode_server_options[(I)${(q)remainder}*]} == 0)); then  # noqa: E501
    _shtab_vectorcode_server_options+=(': :_shtab_vectorcode_server_commands' '*::: :->vectorcode-server')
  fi
  _arguments -C -s $_shtab_vectorcode_server_options

  case $state in
    vectorcode-server)
      words=($line[1] "${words[@]}")
      (( CURRENT += 1 ))
      curcontext="${curcontext%:*:*}:_shtab_vectorcode_server-$line[1]:"
      case $line[1] in
        
      esac
  esac
}



typeset -A opt_args

if [[ $zsh_eval_context[-1] == eval ]]; then
  # eval/source/. command, register function for later
  compdef _shtab_vectorcode_server -N vectorcode-server
else
  # autoload from fpath, call function directly
  _shtab_vectorcode_server "$@"
fi

